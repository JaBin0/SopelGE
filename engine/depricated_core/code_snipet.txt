 //glDrawArrays(GL_TRIANGLES, 0, 3);

    //     glm::mat4 modelMat = glm::mat4(1.0);
//     modelMat = glm::translate(glm::mat4(1.0), glm::vec3(0.0f, 0.0f, -10.0f));

//     glClearColor(0.2f, 0.25f, 0.33f, 1.0f);
//     glClear(GL_COLOR_BUFFER_BIT);

//     glUseProgram(m_graphicPiplines[0]);
//     
//     glUniformMatrix4fv(glGetUniformLocation(m_graphicPiplines[0], "view"), 1, GL_FALSE, glm::value_ptr(m_camera));
//     glUniformMatrix4fv(glGetUniformLocation(m_graphicPiplines[0], "model"), 1, GL_FALSE, glm::value_ptr(modelMat));

//     struct GModel model = m_modelMap.at(m_testId);
//     glBindVertexArray(model.vao);

//     glDrawArrays(GL_TRIANGLES, 0, model.verticesNumber);